[{"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/index.js":"1","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/App.js":"2","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/Expenses.js":"3","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js":"4","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/UI/Card.js":"5","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseDate.js":"6","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/NewExpense/NewExpense.js":"7","/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/NewExpense/ExpenseForm.js":"8"},{"size":142,"mtime":1616592305000,"results":"9","hashOfConfig":"10"},{"size":1362,"mtime":1631229841595,"results":"11","hashOfConfig":"10"},{"size":852,"mtime":1631146102515,"results":"12","hashOfConfig":"10"},{"size":973,"mtime":1631180638909,"results":"13","hashOfConfig":"10"},{"size":202,"mtime":1631144342085,"results":"14","hashOfConfig":"10"},{"size":531,"mtime":1631144363077,"results":"15","hashOfConfig":"10"},{"size":514,"mtime":1631229710356,"results":"16","hashOfConfig":"10"},{"size":2706,"mtime":1631229441511,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rv2oqd",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/index.js",[],["36","37"],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/App.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/Expenses.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseItem.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/UI/Card.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/Expenses/ExpenseDate.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/NewExpense/NewExpense.js",[],"/Users/lidian/Desktop/Coding/Udemy/React-Complete-Guide/01-starting-setup/src/components/NewExpense/ExpenseForm.js",["38"],"import React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport NewExpense from \"./NewExpense\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    setEnteredTitle(event.target.value);\n\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    // console.log(expenseData);\n    props.onSaveExpenseData(expenseData);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            step=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        {/* type of this button to submit so that when this button is pressed \n      since it's inside of this form, this form will be submitted. */}\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":18},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'NewExpense' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]